# This is a basic workflow that is manually triggered

name: transcendence CI

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job 1: Lint checking and basic checks
  lint:
    runs-on: ubuntu-latest
    name: Code Quality check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Typescript check (backend)
        run: |
          cd backend
          npm run build

      - name: Build frontend
        run: |
          cd frontend
          npm run build

  # Job 2: Unit tests
  test:
    name: Unit testing
    runs-on: ubuntu-latest
    needs: lint #needs is for running this test sequentially
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          
      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm run test:ci
  

  # Job 3: Docker build + Integration testing
  docker-tests:
      name: Docker integration tests
      runs-on: ubuntu-latest
      needs: [lint, test]
      steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker images
        run: |
          docker compose build --no-cache

      - name: Start services
        run: |
          docker compose up -d
          sleep 30 #Wait for services to be ready

      - name: Run health checks
        run: |
          curl -f http://localhost:3000/api/health || exit 1
          # Small backend test: api health endpoint

          curl -f http://localhost:8080 || exit 1
          # Small frontend test: running frontend

      - name: Run integration tests
        run: |
          docker compose exec -T backend npm run test:integration || true

      - name: Collect logs
        if: failure()
        run: |
          docker compose logs > docker-logs.txt
        
      - name: Upload logs on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: docker-logs
          path: docker-logs.txt

      - name: Cleanup
        if: always()
        run: |
          docker compose down -v

